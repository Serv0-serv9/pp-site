
// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–∑–∏–Ω–æ–π –ø–æ–∫—É–ø–æ–∫
class CartService {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage
    static getCart() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage
            const cartJson = localStorage.getItem('cart');
            // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å - –ø–∞—Ä—Å–∏–º JSON, –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
            return cartJson ? JSON.parse(cartJson) : [];
        } catch (error) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —á—Ç–µ–Ω–∏—è/–ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö
            console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', error);
            return [];
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ localStorage
    static saveCart(cart) {
        try {
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ –∫–æ—Ä–∑–∏–Ω—ã –≤ JSON –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            localStorage.setItem('cart', JSON.stringify(cart));
        } catch (error) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', error);
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    static addToCart(product) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ—Ä–∑–∏–Ω—É
        const cart = this.getCart();
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        const existingItem = cart.find(item => item.id === product.id);
        
        if (existingItem) {
            // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –µ—Å—Ç—å - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            existingItem.quantity += 1;
        } else {
            // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º 1
            cart.push({ ...product, quantity: 1 });
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
        this.saveCart(cart);
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        this.updateCartCount();
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
        this.showNotification('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ (–≤ —à–∞–ø–∫–µ —Å–∞–π—Ç–∞)
    static updateCartCount() {
        try {
            // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (—Å—É–º–º–∏—Ä—É–µ–º quantity –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞)
            const totalItems = this.getCart().reduce((sum, item) => sum + (item.quantity || 1), 0);
            // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å id="cart-count" –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Ö —Ç–µ–∫—Å—Ç
            document.querySelectorAll('#cart-count').forEach(el => {
                el.textContent = totalItems;
            });
        } catch (error) {
            console.error('Error updating cart count:', error);
        }
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    static showNotification(message, type = 'success') {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–ª–∏—Å—å
        const oldNotifications = document.querySelectorAll('.notification');
        oldNotifications.forEach(notification => notification.remove());
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        // HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è
        notification.innerHTML = `
            <span>${message}</span>
            <button onclick="this.parentElement.remove()" style="margin-left: 10px; background: none; border: none; color: white; cursor: pointer;">√ó</button>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ body
        document.body.appendChild(notification);
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => notification.remove(), 3000);
    }

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
    static clearCart() {
        this.saveCart([]); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
        this.updateCartCount(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
    }
}

// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –∫–æ—Ä–∑–∏–Ω—ã
class CartPage {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä–∑–∏–Ω—ã
    static init() {
        this.updateCartCount(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–æ–≤–∞—Ä–æ–≤
        this.renderCart();      // –†–µ–Ω–¥–µ—Ä–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
        this.setupEventListeners(); // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ (–¥–µ–ª–µ–≥–∏—Ä—É–µ–º CartService)
    static updateCartCount() {
        CartService.updateCartCount();
    }

    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã
    static renderCart() {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        const cart = CartService.getCart();
        // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
        const container = document.getElementById('cart-items'); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
        const totalElement = document.getElementById('cart-total'); // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ–±—â–µ–π —Å—É–º–º—ã
        const checkoutBtn = document.getElementById('checkout-btn'); // –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞

        // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω - –≤—ã—Ö–æ–¥–∏–º
        if (!container) return;

        // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
        if (cart.length === 0) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ
            container.innerHTML = `
                <div class="empty-cart">
                    <div style="font-size: 4rem; margin-bottom: 1rem;">üìã</div>
                    <h3>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫</h3>
                    <a href="index.html" class="btn btn-primary" style="margin-top: 1rem;">–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤–∞–∫–∞–Ω—Å–∏—è–º</a>
                </div>
            `;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É –∏ –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
            if (totalElement) totalElement.textContent = '–ò—Ç–æ–≥–æ: 0 —Ä—É–±.';
            if (checkoutBtn) checkoutBtn.disabled = true; // –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
            return;
        }

        // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
        const total = cart.reduce((sum, item) => sum + (item.price || 0) * (item.quantity || 1), 0);
        const totalItems = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        container.innerHTML = cart.map(item => {
            // –°—É–º–º–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ (—Ü–µ–Ω–∞ √ó –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
            const itemTotal = (item.price || 0) * (item.quantity || 1);
            return `
                <div class="cart-item" data-product-id="${item.id}">
                    <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ -->
                    <img src="${item.image}" alt="${item.name}" class="cart-item-image">
                    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ -->
                    <div class="cart-item-info">
                        <h3>${item.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä'}</h3>
                        <div class="cart-item-price">${(item.price).toLocaleString('ru-RU')} —Ä—É–±.</div>
                        <div class="item-total">${(item.category).toLocaleString('ru-RU')}</div>
                    </div>
                    <!-- –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                    <div class="cart-item-controls">
                        <!-- –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ -->
                        <button class="btn btn-danger" onclick="CartPage.removeItem(${item.id})">üóëÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å</button>
                    </div>
                </div>
            `;
        }).join(''); // –û–±—ä–µ–¥–∏–Ω—è–µ–º –º–∞—Å—Å–∏–≤ HTML —Å—Ç—Ä–æ–∫ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É

        // –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫ —Å –æ–±—â–µ–π —Å—É–º–º–æ–π
        if (totalElement) {
            totalElement.innerHTML = `
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <span>–ò—Ç–æ–≥–æ:</span>
                    <span style="font-size: 1.5em; color: #e74c3c;">${total.toLocaleString('ru-RU')} —Ä—É–±.</span>
                </div>
                <div style="font-size: 0.9em; color: #7f8c8d; margin-top: 0.5rem;">–¢–æ–≤–∞—Ä–æ–≤: ${totalItems} —à—Ç.</div>
            `;
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        if (checkoutBtn) {
            checkoutBtn.disabled = false; // –î–µ–ª–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–π
            checkoutBtn.textContent = `–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚Ä¢ ${total.toLocaleString('ru-RU')} —Ä—É–±.`; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
    static updateQuantity(productId, change) {
        const cart = CartService.getCart();
        // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        const itemIndex = cart.findIndex(item => item.id === productId);
        
        // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω
        if (itemIndex !== -1) {
            const item = cart[itemIndex];
            // –ò–∑–º–µ–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            item.quantity += change;
            
            // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–ª–æ 0 –∏–ª–∏ –º–µ–Ω—å—à–µ - —É–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä
            if (item.quantity <= 0) {
                this.removeItem(productId);
            } else {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
                CartService.saveCart(cart);
                this.renderCart();
                this.updateCartCount();
            }
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    static removeItem(productId) {
        const cart = CartService.getCart();
        // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const item = cart.find(item => item.id === productId);
        // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É, —É–¥–∞–ª—è—è —Ç–æ–≤–∞—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID
        CartService.saveCart(cart.filter(item => item.id !== productId));
        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        this.renderCart();
        this.updateCartCount();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
        if (item) {
            this.showNotification(`–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "${item.name}" –æ—Ç–º–µ–Ω–µ–Ω`);
        }
    }

    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    static async checkout() {
        const cart = CartService.getCart();
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞
        if (cart.length === 0) {
            this.showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!', 'error');
            return;
        }

        // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        const total = cart.reduce((sum, item) => sum + (item.price || 0) * (item.quantity || 1), 0);
        if (!confirm(`–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ ${total.toLocaleString('ru-RU')} —Ä—É–±.?`)) return;

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            const response = await fetch(`${window.location.origin}/api/cart`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ 
                    cart: cart,           // –î–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
                    total: total,         // –û–±—â–∞—è —Å—É–º–º–∞
                    timestamp: new Date().toISOString() // –í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
                })
            });

            // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ
            if (response.ok) {
                const result = await response.json();
                this.showNotification(`‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ù–æ–º–µ—Ä: ${result.orderId}`);
                // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
                CartService.clearCart();
                this.renderCart();
            } else {
                throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
            }
        } catch (error) {
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ä–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ
            this.showNotification('‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ!');
            CartService.clearCart();
            this.renderCart();
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    static setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        const checkoutBtn = document.getElementById('checkout-btn');
        if (checkoutBtn) checkoutBtn.addEventListener('click', () => this.checkout());
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–µ–ª–µ–≥–∏—Ä—É–µ–º CartService)
    static showNotification(message, type = 'success') {
        CartService.showNotification(message, type);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => CartPage.init());

// –î–µ–ª–∞–µ–º –∫–ª–∞—Å—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
window.CartPage = CartPage;
window.CartService = CartService;