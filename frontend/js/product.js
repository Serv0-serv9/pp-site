// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = window.location.origin;

class ProductService {
    static async getProductById(productId) {
        try {
            console.log('Fetching product:', productId);
            const response = await fetch(`${API_BASE_URL}/api/products/${productId}`);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const product = await response.json();
            console.log('Product loaded:', product);
            return product;
        } catch (error) {
            console.error('Error loading product:', error);
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-—Ç–æ–≤–∞—Ä –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
            return this.getDemoProduct(productId);
        }
    }

    static getDemoProduct(productId) {
        const demoProducts = {
            1: {
                id: 1,
                name: "iPhone 15 Pro",
                price: 99990,
                image: "img/iphone.jpg",
                description: "–ù–æ–≤—ã–π iPhone 15 Pro —Å —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ –º–æ—â–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º. –û—Å–Ω–∞—â–µ–Ω –ø–µ—Ä–µ–¥–æ–≤–æ–π –∫–∞–º–µ—Ä–æ–π 48MP –∏ —Ç–∏—Ç–∞–Ω–æ–≤—ã–º –∫–æ—Ä–ø—É—Å–æ–º.",
                category: "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã",
                inStock: true,
                features: ["6.1\" OLED –¥–∏—Å–ø–ª–µ–π", "A17 Pro chip", "48MP –∫–∞–º–µ—Ä–∞", "Titanium –∫–æ—Ä–ø—É—Å", "5G", "Face ID"]
            },
            2: {
                id: 2,
                name: "MacBook Air M2",
                price: 129990,
                image: "img/mac.jpg",
                description: "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Ç–æ–Ω–∫–∏–π –∏ –º–æ—â–Ω—ã–π –Ω–æ—É—Ç–±—É–∫ —Å —á–∏–ø–æ–º M2. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞.",
                category: "–ù–æ—É—Ç–±—É–∫–∏",
                inStock: true,
                features: ["13.6\" Liquid Retina", "M2 chip", "18h battery", "8GB RAM", "256GB SSD", "macOS"]
            },
            3: {
                id: 3,
                name: "AirPods Pro",
                price: 24990,
                image: "img/pods.jpg",
                description: "–ù–∞—É—à–Ω–∏–∫–∏ —Å –∞–∫—Ç–∏–≤–Ω—ã–º —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º –∏ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º –∑–≤—É–∫–æ–º. –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É—á–∞–Ω–∏—è.",
                category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã",
                inStock: true,
                features: ["–®—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ", "–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∞—É–¥–∏–æ", "6h —Ä–∞–±–æ—Ç—ã", "Case", "Bluetooth 5.3"]
            },
            4: {
                id: 4,
                name: "Apple Watch Series 9",
                price: 41990,
                image: "img/watch.jpg",
                description: "–£–º–Ω—ã–µ —á–∞—Å—ã —Å –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ñ–∏—Ç–Ω–µ—Å–∞. –í—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏.",
                category: "–ì–∞–¥–∂–µ—Ç—ã",
                inStock: false,
                features: ["45mm display", "ECG", "GPS", "Water resistant", "Heart rate", "Sleep tracking"]
            }
        };

        return demoProducts[productId] || {
            id: productId,
            name: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω",
            price: 0,
            image: "",
            description: "–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
            category: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            inStock: false,
            features: ["–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"]
        };
    }
}

class CartService {
    static getCart() {
        try {
            return JSON.parse(localStorage.getItem('cart')) || [];
        } catch (error) {
            console.error('Error reading cart:', error);
            return [];
        }
    }

    static saveCart(cart) {
        try {
            localStorage.setItem('cart', JSON.stringify(cart));
        } catch (error) {
            console.error('Error saving cart:', error);
        }
    }

    static addToCart(product) {
        const cart = this.getCart();
        const existingItem = cart.find(item => item.id === product.id);
        
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cart.push({
                ...product,
                quantity: 1
            });
        }
        
        this.saveCart(cart);
        this.updateCartCount();
        this.showNotification('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!', 'success');
    }

    static updateCartCount() {
        try {
            const cart = this.getCart();
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            const cartCountElements = document.querySelectorAll('#cart-count');
            
            cartCountElements.forEach(el => {
                el.textContent = totalItems;
            });
        } catch (error) {
            console.error('Error updating cart count:', error);
        }
    }

    static showNotification(message, type = 'success') {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const oldNotifications = document.querySelectorAll('.notification');
        oldNotifications.forEach(notification => notification.remove());
        
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <span>${message}</span>
            <button onclick="this.parentElement.remove()" style="margin-left: 10px; background: none; border: none; color: white; cursor: pointer;">√ó</button>
        `;
        
        document.body.appendChild(notification);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 5000);
    }
}

class ProductDetailRenderer {
    static async renderProductDetail() {
        const container = document.getElementById('product-detail');
        
        if (!container) {
            console.error('Product detail container not found');
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        container.innerHTML = this.getLoadingHTML();

        try {
            // –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL
            const urlParams = new URLSearchParams(window.location.search);
            const productId = parseInt(urlParams.get('id'));
            
            console.log('Product ID from URL:', productId);

            if (!productId || isNaN(productId)) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π ID –∑–∞—è–≤–∫–∏');
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä
            const product = await ProductService.getProductById(productId);
            
            // –†–µ–Ω–¥–µ—Ä–∏–º —Ç–æ–≤–∞—Ä
            container.innerHTML = this.getProductHTML(product);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.addEventListeners(product);
            
        } catch (error) {
            console.error('Error rendering product:', error);
            container.innerHTML = this.getErrorHTML(error.message);
        }
    }

    static getLoadingHTML() {
        return `
            <div class="loading-container">
                <div class="loading-spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–∫–∏...</p>
                <button onclick="location.reload()" class="btn btn-primary">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            </div>
        `;
    }

    static getErrorHTML(errorMessage) {
        return `
            <div class="error-container">
                <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–∫–∏</h2>
                <p>${errorMessage}</p>
                <div style="margin-top: 20px;">
                    <a href="index.html" class="btn btn-primary">–í–µ—Ä–Ω—É—Ç—å—Å—è</a>
                    <button onclick="location.reload()" class="btn btn-secondary">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
                </div>
            </div>
        `;
    }

    static getProductHTML(product) {
        return `
            <div class="product-detail">
                <div class="product-detail-image-container">
                    <img src="${product.image}" alt="${product.name}" class="product-detail-image">
                </div>
                <div class="product-detail-info">
                    <h1>${product.name}</h1>
                    <div class="product-detail-price">${product.price.toLocaleString('ru-RU')} —Ä—É–±.</div>
                    
                    <div class="stock-status ${product.inStock ? 'in-stock' : 'out-of-stock'}">
                        ${product.inStock ? '‚úì –ï—Å—Ç—å –º–µ—Å—Ç–∞' : '‚úó –ù–µ—Ç –º–µ—Å—Ç'}
                    </div>
                    
                    <p class="product-detail-description">${product.description}</p>
                    
                    <h3>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</h3>
                    <ul class="features-list">
                        ${product.features.map(feature => `<li>${feature}</li>`).join('')}
                    </ul>
                    
                    <div class="product-actions">
                        <button class="btn btn-success add-to-cart-btn" 
                                ${!product.inStock ? 'disabled' : ''}
                                data-product-id="${product.id}">
                            ${product.inStock ? 'üìã –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É' : '‚ùå –ù–µ—Ç –º–µ—Å—Ç'}
                        </button>
                        <a href="index.html" class="btn btn-primary">‚Üê –ù–∞–∑–∞–¥ –∫ –≤–∞–∫–∞–Ω—Å–∏—è–º</a>
                    </div>
                </div>
            </div>
        `;
    }

    static addEventListeners(product) {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
        const addToCartBtn = document.querySelector('.add-to-cart-btn');
        if (addToCartBtn) {
            addToCartBtn.addEventListener('click', () => {
                CartService.addToCart(product);
                // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                addToCartBtn.textContent = '‚úì –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
                addToCartBtn.style.background = '#27ae60';
            });
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('Product page loaded');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
    CartService.updateCartCount();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º —Ç–æ–≤–∞—Ä
    ProductDetailRenderer.renderProductDetail();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
window.CartService = CartService;
window.ProductDetailRenderer = ProductDetailRenderer;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.debugProductPage = function() {
    console.log('URL params:', new URLSearchParams(window.location.search).toString());
    console.log('Cart:', CartService.getCart());
};